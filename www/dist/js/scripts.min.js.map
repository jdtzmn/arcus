{"version":3,"sources":["js/addServer.js","js/auth0.js","js/buttons.js","js/getServers.js","js/placeholder-typed.js","js/removeServer.js"],"names":["lock","$","document","ready","window","localStorage","getItem","ajax","url","beforeSend","xhr","setRequestHeader","done","data","console","log","stop","hide","text","fadeIn","phone_number","removeClass","addClass","click","removeItem","location","replace","Auth0LockPasswordless","sms","callbackURL","authParams","scope","autoclose","err","profile","id_token","access_token","state","refresh_token","setItem","Typed","el","options","this","extend","fn","typed","defaults","typeSpeed","startDelay","backDelay","strings","strPos","arrayPos","string","stopNum","loop","loopCount","curLoop","stopArray","length","build","prototype","constructor","init","self","setTimeout","typewrite","curString","curStrPos","humanize","Math","round","random","attr","substr","clearTimeout","clear","backspace","callback","option","each","$this","jQuery"],"mappings":"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","file":"scripts.min.js","sourcesContent":["","var lock = null;\n$(document).ready(function() {\n   if (window.localStorage.getItem('userToken') !== null) {\n     $.ajax({ url: 'https://arcus.auth0.com/userinfo', beforeSend: function(xhr) {\n       xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.getItem('userToken'));\n     }}).done(function( data ) {\n       console.log(data);\n       $('.login-span').stop().hide(0).text('Logout').fadeIn();\n       $('.user').stop().hide(0).text('Signed in as: ' + data.phone_number).fadeIn();\n       $('.login').removeClass('btn-primary');\n       $('.login').addClass('btn-default');\n     });\n   }\n\n  $('.login').click(function() {\n    if ($('.login').text() === 'Logout') {\n      window.localStorage.removeItem('userToken');\n      window.localStorage.removeItem('smsCred');\n      window.location.replace('/');\n      return;\n    }\n\n    lock = new Auth0LockPasswordless('qB53zH4XKon2YWheT9dXixXjyvEoy0Sq', 'arcus.auth0.com');\n    lock.sms({\n      callbackURL: '',\n      authParams: {\n        scope: 'openid profile'\n      },\n      autoclose: true\n    }, function(err, profile, id_token, access_token, state, refresh_token) {\n      if (!err) {\n        window.localStorage.setItem('userToken', access_token);\n        window.location.replace('/');\n      }\n    });\n  });\n});\n","$(document).ready(function() {\n  \n});\n","","// The MIT License (MIT)\n\n// Tyepd.js | Copyright (c) 2014 Matt Boldt | www.mattboldt.com\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n\n!function($){\n\n\t\"use strict\";\n\n\tvar Typed = function(el, options){\n\n\t\t// chosen element to manipulate text\n\t\tthis.el = $(el);\n\t\t// options\n\t\tthis.options = $.extend({}, $.fn.typed.defaults, options);\n\n\t\t// text content of element\n\t\tthis.text = this.el.text();\n\n\t\t// typing speed\n\t\tthis.typeSpeed = this.options.typeSpeed;\n\n\t\t// add a delay before typing starts\n\t\tthis.startDelay = this.options.startDelay;\n\n\t\t// amount of time to wait before backspacing\n\t\tthis.backDelay = this.options.backDelay;\n\n\t\t// input strings of text\n\t\tthis.strings = this.options.strings;\n\n\t\t// character number position of current string\n\t\tthis.strPos = 0;\n\n\t\t// current array position\n\t\tthis.arrayPos = 0;\n\n\t\t// current string based on current values[] array position\n\t\tthis.string = this.strings[this.arrayPos];\n\n\t\t// number to stop backspacing on.\n\t\t// default 0, can change depending on how many chars\n\t\t// you want to remove at the time\n\t\tthis.stopNum = 0;\n\n\t\t// Looping logic\n\t\tthis.loop = this.options.loop;\n\t\tthis.loopCount = this.options.loopCount;\n\t\tthis.curLoop = 1;\n\t\tif (this.loop === false){\n\t\t\t// number in which to stop going through array\n\t\t\t// set to strings[] array (length - 1) to stop deleting after last string is typed\n\t\t\tthis.stopArray = this.strings.length-1;\n\t\t}\n\t\telse{\n\t\t\tthis.stopArray = this.strings.length;\n\t\t}\n\n\t\t// All systems go!\n\t\tthis.build();\n\t}\n\n\t\tTyped.prototype =  {\n\n\t\t\tconstructor: Typed\n\n\t\t\t, init: function(){\n\t\t\t\t// begin the loop w/ first current string (global self.string)\n\t\t\t\t// current string will be passed as an argument each time after this\n\t\t\t\tvar self  = this;\n\t\t\t  \tsetTimeout(function() {\n\t\t\t  \t\t// Start typing\n\t\t\t\t\tself.typewrite(self.string, self.strPos)\n\t\t\t  \t}, self.startDelay);\n\t\t\t}\n\n\t\t\t, build: function(){\n\t\t\t\t// Insert cursor\n\t\t\t\t//this.el.after(\"<span id=\\\"typed-cursor\\\">|</span>\");\n\t\t\t\tthis.init();\n\t\t\t}\n\n\t\t\t// pass current string state to each function\n\t\t\t, typewrite: function(curString, curStrPos){\n\n\t\t\t\t// varying values for setTimeout during typing\n\t\t\t\t// can't be global since number changes each time loop is executed\n\t\t\t\tvar humanize = Math.round(Math.random() * (100 - 30)) + this.typeSpeed;\n\t\t\t\tvar self = this;\n\n\t\t\t\t// ------------- optional ------------- //\n\t\t\t\t// backpaces a certain string faster\n\t\t\t\t// ------------------------------------ //\n\t\t\t\t// if (self.arrayPos == 1){\n\t\t\t\t// \tself.backDelay = 50;\n\t\t\t\t// }\n\t\t\t\t// else{ self.backDelay = 500; }\n\n\t\t\t\t// containg entire typing function in a timeout\n\t\t\t\tsetTimeout(function() {\n\n\t\t\t\t\t// make sure array position is less than array length\n\t\t\t\t\tif (self.arrayPos < self.strings.length){\n\n\t\t\t\t\t\t// start typing each new char into existing string\n\t\t\t\t\t\t// curString is function arg\n                        // CUSTOM PLACEHOLDER TEXT\n\t\t\t\t\t\tself.el.attr(\"placeholder\", curString.substr(0, curStrPos));\n\n\t\t\t\t\t\t// check if current character number is the string's length\n\t\t\t\t\t\t// and if the current array position is less than the stopping point\n\t\t\t\t\t\t// if so, backspace after backDelay setting\n\t\t\t\t\t\tif (curStrPos > curString.length && self.arrayPos < self.stopArray){\n\t\t\t\t\t\t\tclearTimeout(clear);\n\t\t\t\t\t\t\tvar clear = setTimeout(function(){\n\t\t\t\t\t\t\t\tself.backspace(curString, curStrPos);\n\t\t\t\t\t\t\t}, self.backDelay);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// else, keep typing\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t// add characters one by one\n\t\t\t\t\t\t\tcurStrPos++;\n\t\t\t\t\t\t\t// loop the function\n\t\t\t\t\t\t\tself.typewrite(curString, curStrPos);\n\t\t\t\t\t\t\t// if the array position is at the stopping position\n\t\t\t\t\t\t\t// finish code, on to next task\n\t\t\t\t\t\t\tif (self.loop === false){\n\t\t\t\t\t\t\t\tif (self.arrayPos === self.stopArray && curStrPos === curString.length){\n\t\t\t\t\t\t\t\t\t// animation that occurs on the last typed string\n\t\t\t\t\t\t\t\t\t// fires callback function\n\t\t\t\t\t\t\t\t\tvar clear = self.options.callback();\n\t\t\t\t\t\t\t\t\tclearTimeout(clear);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// if the array position is greater than array length\n\t\t\t\t\t// and looping is active, reset array pos and start over.\n\t\t\t\t\telse if (self.loop === true && self.loopCount === false){\n\t\t\t\t\t\tself.arrayPos = 0;\n\t\t\t\t\t\tself.init();\n\t\t\t\t\t}\n\t\t\t\t\t\telse if(self.loopCount !== false && self.curLoop < self.loopCount){\n\t\t\t\t\t\t\tself.arrayPos = 0;\n\t\t\t\t\t\t\tself.curLoop = self.curLoop+1;\n\t\t\t\t\t\t\tself.init();\n\t\t\t\t\t\t}\n\n\t\t\t\t// humanized value for typing\n\t\t\t\t}, humanize);\n\n\t\t\t}\n\n\t\t\t, backspace: function(curString, curStrPos){\n\n\t\t\t\t// varying values for setTimeout during typing\n\t\t\t\t// can't be global since number changes each time loop is executed\n\t\t\t\tvar humanize = Math.round(Math.random() * (100 - 30)) + this.typeSpeed;\n\t\t\t\tvar self = this;\n\n\t\t\t\tsetTimeout(function() {\n\n\t\t\t\t\t// ----- this part is optional ----- //\n\t\t\t\t\t// check string array position\n\t\t\t\t\t// on the first string, only delete one word\n\t\t\t\t\t// the stopNum actually represents the amount of chars to\n\t\t\t\t\t// keep in the current string. In my case it's 14.\n\t\t\t\t\t// if (self.arrayPos == 1){\n\t\t\t\t\t//\tself.stopNum = 14;\n\t\t\t\t\t// }\n\t\t\t\t\t//every other time, delete the whole typed string\n\t\t\t\t\t// else{\n\t\t\t\t\t//\tself.stopNum = 0;\n\t\t\t\t\t// }\n\n\t\t\t\t\t// ----- continue important stuff ----- //\n\t\t\t\t\t// replace text with current text + typed characters\n                    // CUSTOM PLACEHOLDER TEXT\n\t\t\t\t\tself.el.attr(\"placeholder\", curString.substr(0, curStrPos));\n\n\t\t\t\t\t// if the number (id of character in current string) is\n\t\t\t\t\t// less than the stop number, keep going\n\t\t\t\t\tif (curStrPos > self.stopNum){\n\t\t\t\t\t\t// subtract characters one by one\n\t\t\t\t\t\tcurStrPos--;\n\t\t\t\t\t\t// loop the function\n\t\t\t\t\t\tself.backspace(curString, curStrPos);\n\t\t\t\t\t}\n\t\t\t\t\t// if the stop number has been reached, increase\n\t\t\t\t\t// array position to next string\n\t\t\t\t\telse if (curStrPos <= self.stopNum){\n\t\t\t\t\t\tclearTimeout(clear);\n\t\t\t\t\t\tvar clear = self.arrayPos = self.arrayPos+1;\n\t\t\t\t\t\t// must pass new array position in this instance\n\t\t\t\t\t\t// instead of using global arrayPos\n\t\t\t\t\t\tself.typewrite(self.strings[self.arrayPos], curStrPos);\n\t\t\t\t\t}\n\n\t\t\t\t// humanized value for typing\n\t\t\t\t}, humanize);\n\n\t\t\t}\n\n\t\t}\n\n\t$.fn.typed = function (option) {\n\t    return this.each(function () {\n\t      var $this = $(this)\n\t        , data = $this.data('typed')\n\t        , options = typeof option == 'object' && option\n\t      if (!data) $this.data('typed', (data = new Typed(this, options)))\n\t      if (typeof option == 'string') data[option]()\n\t    });\n\t}\n\n\t$.fn.typed.defaults = {\n\t\tstrings: [\"These are the default values...\", \"You know what you should do?\", \"Use your own!\", \"Have a great day!\"],\n\t\t// typing and backspacing speed\n\t\ttypeSpeed: 0,\n\t\t// time before typing starts\n\t\tstartDelay: 0,\n\t\t// time before backspacing\n\t\tbackDelay: 500,\n\t\t// loop\n\t\tloop: false,\n\t\t// false = infinite\n\t\tloopCount: false,\n\t\t// ending callback function\n\t\tcallback: function(){ null }\n\t}\n\n\n}(window.jQuery);\n",""],"sourceRoot":"/source/"}